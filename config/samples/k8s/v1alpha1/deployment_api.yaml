apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api
spec:
  rules:
    - host: api
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: api
                port:
                  name: http
---
apiVersion: v1
kind: Service
metadata:
  name: api
spec:
  selector:
    app.kubernetes.io/name: api
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
---
apiVersion: k8s.tensegrity.fastforge.io/v1alpha1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: api
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: api
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: api
    spec:
      containers:
        - name: api
          image: registry.k8s.io/e2e-test-images/agnhost:2.39
          command:
            - /agnhost
            - netexec
            - --http-port
            - "8080"
          readinessProbe:
            httpGet:
              port: 8080
          livenessProbe:
            httpGet:
              port: 8080
            initialDelaySeconds: 10
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
  produces:
    - key: http-host
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      fieldPath: '{ .spec.rules[0].host }.{ .metadata.namespace }'
    - key: http-port
      apiVersion: v1
      kind: Service
      fieldPath: '{ .spec.ports[?(@.name=="http")].port }'
